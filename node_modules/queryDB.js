/**
 * Created by WQ on 2015/5/14.
 *
 * 对于查询操作，应该指定集合的名字，并且采用严格模式，如果该集合不存在按照错误返回
 *
 */

var util = require( "../src/js/util.js" );

// 把指定的集合没有解决的问题查询按照出现次数降序出来
var findAllUnsolvedErr = function ( db, collectionName, callback ) {
    db.collection( collectionName, {strict : true}, function ( err, collection ) {
        if ( err ) {
            callback( "集合" + collectionName + "不存在" );
        }
        else {
            collection.aggregate(
                [
                    {
                        $match : {
                            solve : false
                        }
                    },
                    {
                        $group : {
                            _id : "$err",
                            count : {
                                $sum : 1
                            }
                        }
                    },
                    {
                        $sort : {
                            count : -1
                        }
                    }
                ],
                function ( err, result ) {
                    callback( err ? err.toString() : null, result );
                }
            );
        }
    } );
};

var getCollectionList = function ( db, callback ) {
    db.collections( function ( err, collections ) {
        if ( err ) {
            callback( err.toString() );
        }
        else {
            var result = [];
            util.forEach( collections, function ( item ) {
                item.s.name != "system.indexes" && result.push( {
                    name : item.s.name
                } )
            } );
            callback( null, result );
        }
    } );
};

exports.findAllUnsolvedErr = findAllUnsolvedErr;
exports.getCollectionList = getCollectionList;